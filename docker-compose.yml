version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: minilms-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MiniLMS123!
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - minilms-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P MiniLMS123! -C -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: minilms-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - minilms-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # .NET API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: minilms-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=MiniLMS;User Id=sa;Password=MiniLMS123!;TrustServerCertificate=true;
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=admin
      - RabbitMQ__Password=admin
    ports:
      - "5000:80"
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - minilms-network
    volumes:
      - ./backend/imports:/app/imports

  # Background Worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    container_name: minilms-worker
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=MiniLMS;User Id=sa;Password=MiniLMS123!;TrustServerCertificate=true;
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=admin
      - RabbitMQ__Password=admin
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - minilms-network
    volumes:
      - ./backend/imports:/app/imports

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: minilms-frontend
    ports:
      - "4200:80"
    depends_on:
      - api
    networks:
      - minilms-network

networks:
  minilms-network:
    driver: bridge

volumes:
  sqlserver_data:
  rabbitmq_data:
